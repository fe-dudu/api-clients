/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/history/v1/substrate/{network}/{substrateAddress}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations['GET SubstrateTransactionHistory/GetSubstrateHistory'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    RecognizedTransaction: Record<string, never>;
    TransactionHistory: {
      blockNumber: string | null;
      /** Format: date-time */
      date: string;
      hash: string | null;
      recognizedTransactions: components['schemas']['RecognizedTransaction'][] | null;
      signer: string | null;
      success: boolean;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  'GET EvmTransactionHistory/GetTransactions': {
    parameters: {
      query?: {
        token?: string;
      };
      header?: never;
      path: {
        handler: string;
        network: string;
        walletAddress: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Success */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['TransactionHistory'][];
          'text/json': components['schemas']['TransactionHistory'][];
          'text/plain': components['schemas']['TransactionHistory'][];
        };
      };
    };
  };
  'GET SubstrateTransactionHistory/GetSubstrateHistory': {
    parameters: {
      query?: never;
      header?: never;
      path: {
        network: string;
        substrateAddress: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Success */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['TransactionHistory'][];
          'text/json': components['schemas']['TransactionHistory'][];
          'text/plain': components['schemas']['TransactionHistory'][];
        };
      };
    };
  };
}
