/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/notification/v1/devices/register': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations['POST NotificationDevices/RegisterDevice'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    AddressPayload: {
      address: string | null;
      networkType: string | null;
      signature: string | null;
    };
    RegisterDeviceRequest: {
      addresses: components['schemas']['AddressPayload'][] | null;
      handle: string | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  'POST NotificationDevices/RegisterDevice': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: {
      content: {
        'application/*+json': components['schemas']['RegisterDeviceRequest'];
        'application/json': components['schemas']['RegisterDeviceRequest'];
        'text/json': components['schemas']['RegisterDeviceRequest'];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
}
